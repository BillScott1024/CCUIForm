{"version":3,"sources":["PopUpUIForm.ts"],"names":[],"mappings":";;;;AAAA;;;GAGG;;AAEH,sDAAiD;AACjD,oDAA+C;AACzC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAC5C,kDAA+F;AAG/F;IAAyC,+BAAU;IAAnD;;IAqCA,CAAC;IAlCG,4BAAM,GAAN;QACI,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,yBAAc,CAAC,aAAa,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,mBAAQ,CAAC,UAAU,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,2BAAgB,CAAC,YAAY,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,qBAAU,CAAC,KAAK,CAAC;QAC/C,iDAAiD;QACjD,gCAAgC;QAChC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,yBAAyB,CAAC,mBAAS,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrH,CAAC;IAED,2BAAK,GAAL;QACI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED;;;;MAIE;IACF,+BAAS,GAAT;QACI,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED;;;;MAIE;IACF,qCAAe,GAAf;QACI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IApCgB,WAAW;QAD/B,OAAO;OACa,WAAW,CAqC/B;IAAD,kBAAC;CArCD,AAqCC,CArCwC,oBAAU,GAqClD;kBArCoB,WAAW","file":"","sourceRoot":"../../../../assets/Scripte","sourcesContent":["/**\n * 弹出窗体演示\n * \n */\n\nimport BaseUIForm from './UIFormwork/BaseUIForm';\nimport UIMaskMgr from './UIFormwork/UIMaskMgr';\nconst { ccclass, property } = cc._decorator;\nimport { UIFormType, UIFormShowMode, AnimType, UIFormLucenyType } from './UIFormwork/E_UIForm';\n\n@ccclass\nexport default class PopUpUIForm extends BaseUIForm {\n\n\n    onLoad() {\n        this.GetUIType.UIForms_ShowMode = UIFormShowMode.ReverseChange;\n        this.GetUIType.UIForm_AnimType = AnimType.SmallToBig;\n        this.GetUIType.UIForm_LucencyType = UIFormLucenyType.ImPenetrable;\n        this.GetUIType.UIForms_Type = UIFormType.PopUp;\n        //只要使用父类的RigisterButtonObjectEvent注册按钮事件,必须带有一个参数\n        //参考下方:OpenOther/CloseSelfUIForm\n        this.RigisterButtonObjectEvent(this.node, \"OpenHideOther\", this.OpenOther.bind(this));\n        this.RigisterButtonObjectEvent(this.node, \"Close\", this.CloseSelfUIForm.bind(this));\n        this.RigisterButtonObjectEvent(UIMaskMgr.instance().mMaskPanel, \"_UIMaskPanel\", this.CloseSelfUIForm.bind(this));\n    }\n\n    start() {\n        cc.log(this.node.parent.name);\n    }\n\n    /**\n    * 此事件为本节点下的按钮节点注册事件,参数与方法体的指向必须使用self,\n    * 此self为上层注册事件时this的代指\n    * @param self \n    */\n    OpenOther() {\n        this.OpenUIForm(\"HideOtherUIForm\");\n    }\n\n    /**\n    * 此事件为本节点下的按钮节点注册事件,参数与方法体的指向必须使用self,\n    * 此self为上层注册事件时this的代指\n    * @param self \n    */\n    CloseSelfUIForm() {\n        cc.log(this.node.name);\n        this.CloseUIForm(this.node.name);\n    }\n}\n"]}
{"version":3,"sources":["../../../../assets/Scripte/assets/Scripte/TestUIForm.ts"],"names":[],"mappings":";;;;;AAEA,oDAA+C;AAGzC,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAwC,8BAAY;IADpD;QAAA,qEAiDC;QA7CG,UAAU;QAEV,kBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAE3B,WAAK,GAAa,IAAI,CAAC;QAEvB,iBAAW,GAAc,IAAI,CAAC;QAE9B,cAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QACrB,oBAAoB;QACpB,iBAAW,GAAyB,IAAI,GAAG,EAAE,CAAC;QAC9C,sBAAgB,GAAU,IAAI,CAAC;QAC/B,oBAAc,GAAU,IAAI,CAAC;;IAiCjC,CAAC;IAhCG,2BAAM,GAAN;QAAA,iBAiBC;QAhBG,qBAAqB;QACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC7B,IAAI,SAAS,GAAG,IAAI,CAAC;YACrB,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,OAAO,GAAY,SAAS,CAAC;YACjC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC5C,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC5C,mBAAS,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAC9D,IAAI,IAAI,GAAG,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAA;YAC5D,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC;YAC5C,KAAI,CAAC,WAAW,CAAC,SAAS,IAAI,IAAI,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,wBAAwB;QACxB,mBAAS,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;IACtC,CAAC;IAED,2BAAM,GAAN;QACI,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxD;aAAM;YACH,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC;gBACd,mBAAS,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAC7B,CAAC,EAAE,GAAG,CAAC,CAAA;YACP,iDAAiD;YACjD,2BAA2B;SAC9B;IACL,CAAC;IA1CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACO;IAE3B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACI;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mDACU;IATb,UAAU;QAD9B,OAAO;OACa,UAAU,CAgD9B;IAAD,iBAAC;CAhDD,AAgDC,CAhDuC,EAAE,CAAC,SAAS,GAgDnD;kBAhDoB,UAAU","file":"","sourceRoot":"../../../../assets/Scripte","sourcesContent":["import EventDispatch from \"./UIFormwork/EventDispatch\";\nimport { Node, Float, FillType, Component, Scheduler, Label } from './../../creator.d';\nimport UIManager from './UIFormwork/UIManager';\nimport BaseUIForm from './UIFormwork/BaseUIForm';\nimport ResourcesMar from './UIFormwork/ResourcesMar';\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TestUIForm extends cc.Component {\n\n\n    //预加载的所有预制\n    @property(cc.Prefab)\n    mUIFromsArry = new Array();\n    @property(cc.Label)\n    label: cc.Label = null;\n    @property(cc.Sprite)\n    mFillAmount: cc.Sprite = null;\n\n    mTestMap = new Map();\n    //所有窗体Map集合1.名字|2,节点\n    mUIFromsMap: Map<string, cc.Node> = new Map();\n    mUIFormArryCount: Float = null;\n    mUIFormMapSize: Float = null;\n    onLoad() {\n        //this.constructor();\n        this.mUIFormArryCount = this.mUIFromsArry.length;\n        this.mUIFromsArry.forEach(element => {\n            var newPrefab = null;\n            newPrefab = cc.instantiate(element);\n            var newNode: cc.Node = newPrefab;\n            this.mUIFromsMap.set(newNode.name, newNode);\n            this.mUIFormMapSize = this.mUIFromsMap.size;\n            UIManager.instance().mAllUIFormMap.set(newNode.name, newNode);\n            var fill = this.mUIFormMapSize / this.mUIFormArryCount * 100\n            this.label.string = \"加载资源中...\" + fill + \"%\";\n            this.mFillAmount.fillRange += fill;\n        });\n\n        //加载完成进入场景,创建游戏主界面Canvas\n        UIManager.instance().InitUIRoot();\n    }\n\n    update() {\n        if (this.mUIFormArryCount > this.mUIFromsMap.size) {\n            this.label.string = this.mUIFromsMap.size.toString();\n        } else {\n            var self = this;\n            this.scheduleOnce(function () {\n                UIManager.instance().ShowUIForms(\"MainUIForm\");\n                self.node.active = false;\n            }, 0.5)\n            //UIManager.instance().ShowUIForms(\"MainUIForm\");\n            //this.node.active = false;\n        }\n    }\n}\n"]}
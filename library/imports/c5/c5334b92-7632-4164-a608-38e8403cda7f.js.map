{"version":3,"sources":["../../../../../assets/Scripte/UIFormwork/assets/Scripte/UIFormwork/BaseUIForm.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Scripte/UIFormwork","sourcesContent":["/**\n *    Title: UI框架项目\n *           主题: UI窗体的父类\n *    Description: \n *           功能：定义所有UI窗体的父类。\n *           定义四个生命周期\n *           \n *           1：Display 显示状态。\n *           2：Hiding 隐藏状态\n *           3：ReDisplay 再显示状态。\n *           4：Freeze 冻结状态。\n *                         \n *    Date: 2018.6.11\n *    Version: 0.1版本\n *    by : wxy\n */\nimport UIType from './UIType';\nimport Constant from './Constant';\nimport UIMaskMgr from './UIMaskMgr';\nimport UIManager from './UIManager';\nconst { ccclass, property } = cc._decorator;\nimport CCCompentHelper from './CCCompentHelper';\nimport { EventListener, Color } from './../../../creator.d';\nimport { UIFormType, UIFormShowMode, AnimType, UIFormLucenyType } from './E_UIForm';\n\n@ccclass\nexport default class BaseUIForm extends cc.Component {\n\n    //窗体类型\n    private uiType = new UIType();\n\n    public get GetUIType() {\n        return this.uiType;\n    }\n    public set SetUIType(e_type: UIType) {\n        this.uiType = e_type;\n    }\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n\n    onLoad() {\n\n    }\n\n\n\n\n    /**\n     * 当前窗体显示\n     */\n    public ActiveUIForm() {\n        //当前无动画直接显示,有动画,在动画中显示\n        if (this.GetUIType.UIForm_AnimType == AnimType.Normal) {\n            this.node.active = true;\n        }\n        //设置模态窗体调用(必须是弹出窗体)\n        if (this.GetUIType.UIForms_Type == UIFormType.PopUp) {\n            //UIMaskMgr.GetInstance().SetMaskWindow(this.gameObject, _CurrentUIType.UIForm_LucencyType);\n            UIMaskMgr.instance().SetMaskNode(this.node, this.uiType.UIForm_LucencyType);\n        }\n    }\n\n\n    /**\n     * 当前窗体隐藏\n     */\n    public UnActiveUIForm() {\n        //当前无动画直接显示,有动画,在动画中显示\n        if (this.uiType.UIForm_AnimType == AnimType.Normal) {\n            this.node.active = false;\n        }\n        //取消模态窗体调用\n        if (this.uiType.UIForms_Type == UIFormType.PopUp) {\n            UIMaskMgr.instance().CancelMaskNode();\n        }\n    }\n\n\n    /**\n     * 重新显示当前窗体\n     */\n    public Redisplay() {\n        this.node.active = true;\n        //设置模态窗体调用(必须是弹出窗体)\n        if (this.uiType.UIForms_Type == UIFormType.PopUp) {\n            UIMaskMgr.instance().SetMaskNode(this.node, this.uiType.UIForm_LucencyType);\n        }\n    }\n\n    //冻结当前窗体\n    public Freeze() {\n        this.node.active = true;\n    }\n\n\n    /**\n     * 注册按钮事件-子类直接调用\n     * @param parent 按钮父根节点\n     * @param btnName 按钮名称\n     * @param callBack 回调\n     */\n    public RigisterButtonObjectEvent(parent: cc.Node, btnName: string, callBack: Function) {\n        var btnNode: cc.Node = CCCompentHelper.FindChildNode(parent, btnName);\n        btnNode.on(cc.Node.EventType.TOUCH_START, function () {\n            //btnNode.runAction(cc.scaleTo(0.9, 0.9));\n        });\n        btnNode.on(cc.Node.EventType.TOUCH_END, function () {\n            callBack();\n            //btnNode.runAction(cc.scaleTo(0.1,1.1, 1.1));\n            //btnNode.runAction(cc.scaleTo(0.2,1, 1));\n        });\n    }\n\n    /**\n     * 打开窗体\n     * @param uiFormName \n     */\n    public OpenUIForm(uiFormName: string) {\n        UIManager.instance().ShowUIForms(uiFormName);\n\n    }\n\n    /**\n     * 关闭当前窗体\n     * @param uiFormName \n     */\n    public CloseUIForm(uiFormName: string) {\n        UIManager.instance().CloseUIForms(uiFormName);\n    }\n\n}\n"]}
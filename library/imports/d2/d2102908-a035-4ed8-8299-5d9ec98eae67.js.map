{"version":3,"sources":["../../../../../assets/Scripte/Utils/assets/Scripte/Utils/Queue.ts"],"names":[],"mappings":";;;;AAAA;;;;;;;;;GASG;;AAEG,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IADA;QAKY,WAAM,GAAG,CAAC,CAAC;IAmDvB,CAAC;IAjDG;;;;OAIG;IACH,uBAAO,GAAP;QAAA,iBASC;QATO,eAAa;aAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;YAAb,0BAAa;;QACjB,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACd,IAAI,IAAI,GAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YAC/C,IAAI,KAAI,CAAC,IAAI;gBAAE,KAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACrC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAI,CAAC,KAAK;gBAAE,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACnC,KAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,uBAAO,GAAP;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;QAC1D,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAClC,IAAI,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACjC,OAAO,UAAU,CAAC;IACtB,CAAC;IAED;;OAEG;IACH,uBAAO,GAAP;QACI,IAAI,GAAG,GAAQ,EAAE,CAAC;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACtB,OAAO,IAAI,EAAE;YACT,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACpB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACH,yBAAS,GAAT,UAAU,KAAU;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAtDgB,KAAK;QADzB,OAAO;OACa,KAAK,CAuDzB;IAAD,YAAC;CAvDD,AAuDC,IAAA;kBAvDoB,KAAK","file":"","sourceRoot":"../../../../../assets/Scripte/Utils","sourcesContent":["/**\n *    Title: UI框架项目\n *           主题: 队列  \n *           功能: 先进先出\n *   \n *           \n *    Date: 2018.6.11\n *    Version: 0.1版本\n *    by : wxy\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Queue<T>\n{\n    private first: Node<T>;\n    private last: Node<T>;\n    private length = 0;\n\n    /**\n     * 尾部添加元素（进队）\n     * @param items 元素列表\n     * @returns 长度\n     */\n    enqueue(...items: T[]) {\n        items.forEach(item => {\n            var node: Node<T> = { item: item, next: null };\n            if (this.last) this.last.next = node;\n            this.last = node;\n            if (!this.first) this.first = node;\n            this.length++;\n        });\n        return this.length;\n    }\n\n    /**\n     * 头部移除元素（出队）\n     */\n    dequeue() {\n        var removeitem = this.first ? this.first.item : undefined;\n        if (this.length == 1)\n            this.first = this.last = null;\n        if (this.first)\n            this.first = this.first.next;\n        return removeitem;\n    }\n\n    /**\n     * 转换为数组\n     */\n    toArray() {\n        var arr: T[] = [];\n        var node = this.first;\n        while (node) {\n            arr.push(node.item);\n            node = node.next;\n        }\n        return arr;\n    }\n\n    /**\n     * 从数组初始化链表\n     */\n    fromArray(array: T[]) {\n        this.first = this.last = null;\n        this.enqueue.apply(this, array);\n        return this;\n    }\n}\n\ninterface Node<T> {\n    item: T;\n    next: Node<T>;\n}\n"]}